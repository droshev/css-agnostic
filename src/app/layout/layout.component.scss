@function cx-breakpoint-next(
  $name,
  $breakpoints: $default-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@mixin cx-breakpoint-up($name, $breakpoints: $default-breakpoints) {
  $min: cx-breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin cx-breakpoint-down($name, $breakpoints: $default-breakpoints) {
  //temporary delegate to bootstrap
  @include media-breakpoint-down($name, $breakpoints) {
    @content;
  }
}

@function cx-breakpoint-min($name, $breakpoints: $default-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function cx-breakpoint-max($name, $breakpoints: $default-breakpoints) {
  $next: cx-breakpoint-next($name, $breakpoints);
  @return if($next, cx-breakpoint-min($next, $breakpoints) - 0.02px, null);
}

@mixin cx-breakpoint-between(
  $lower,
  $upper,
  $breakpoints: $default-breakpoints
) {
  @include media-breakpoint-between($lower, $upper, $breakpoints) {
    @content;
  }
}

// delete after testing
$default-breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);

$breakpoints: (
  'small': 600px,
  'medium': 900px,
  'large': 1200px
);

@mixin horizontal-layout($components-per-row) {
  display: flex;
  flex-wrap: wrap;
  & > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: unquote((100 / $components-per-row) + '%');
    max-width: unquote((100 / $components-per-row) + '%');
  }
}

.test-layout {
  @include horizontal-layout(1);

  @include cx-breakpoint-up(sm) {
    @include horizontal-layout(2);
  }
  @include cx-breakpoint-up(md) {
    @include horizontal-layout(3);
  }
  @include cx-breakpoint-up(lg) {
    @include horizontal-layout(4);
  }
  @include cx-breakpoint-up(xl) {
    @include horizontal-layout(6);
  }
}

// work on SPA github
// responsive classes
// test in home page for example
// generic layout rules for the header - try to emulate
// class for page break/new row
// checkout smart layout wiki

.cx-layout2 {
  display: flex;
  flex-direction: column;
}
//------------------------

.layour-wrapper {
  margin: 20px 0;
  max-width: 50%;
  border: 3px dashed lightcyan;
}

.image {
  height: 400px;
}

.image1 {
  background-image: url('https://placeimg.com/640/400/arch');
}
.image2 {
  background-image: url('https://placeimg.com/640/400/tech');
}
.image3 {
  background-image: url('https://placeimg.com/640/400/nature');
}
.image4 {
  background-image: url('https://placeimg.com/640/400/animals');
}
.image5 {
  background-image: url('https://placeimg.com/640/400/people');
}
.image6 {
  background-image: url('https://placeimg.com/640/400/nature/sepia');
}
.image7 {
  background-image: url('https://placeimg.com/2000/400/animals/grayscale');
}
.image8 {
  background-image: url('https://placeimg.com/2000/400/tech/sepia');
}
.image9 {
  background-image: url('https://placeimg.com/2000/400/people/sepia');
}
