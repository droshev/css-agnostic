/* You can add global styles to this file, and also import other style files */

body {
  font-family: 'Open Sans';
}

$primary: rgb(96, 125, 139);
$primary-color: $primary;

.bootstrap {
  @import '../../agnos/scss/bootstrap';
  @include agnos($button: true, $alert: true, $tabs: true, $typography: true);
}

.bulma {
  @import '../../agnos/scss/bulma';
  @include agnos($button: true, $alert: true, $tabs: true, $typography: true);
}

.foundation {
  $foundation-palette: (
    primary: $primary,
    secondary: #767676,
    success: #3adb76,
    warning: #ffae00,
    alert: #cc4b37
  );
  @import '../../agnos/scss/foundation';
  @include agnos($button: true, $alert: true, $tabs: true, $typography: true);
}

.materialize {
  $secondary-color: $primary;
  @import '../../agnos/scss/materialize';
  @include agnos($button: true, $alert: true, $tabs: true, $typography: true);
}

.fundamental-ui {
  $fd-colors-action: (
    1: $primary
  );

  @import '../../agnos/scss/fundamental-ui';
  @include agnos($button: true, $alert: true, $tabs: true, $typography: true);
}

@function cx-breakpoint-next(
  $name,
  $breakpoints: $default-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@mixin cx-breakpoint-up($name, $breakpoints: $default-breakpoints) {
  $min: cx-breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}
@mixin cx-breakpoint-down($name, $breakpoints: $default-breakpoints) {
  //temporary delegate to bootstrap
  @include media-breakpoint-down($name, $breakpoints) {
    @content;
  }
}

@function cx-breakpoint-min($name, $breakpoints: $default-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function cx-breakpoint-max($name, $breakpoints: $default-breakpoints) {
  $next: cx-breakpoint-next($name, $breakpoints);
  @return if($next, cx-breakpoint-min($next, $breakpoints) - 0.02px, null);
}

@mixin cx-breakpoint-between(
  $lower,
  $upper,
  $breakpoints: $default-breakpoints
) {
  @include media-breakpoint-between($lower, $upper, $breakpoints) {
    @content;
  }
}

// delete after testing
$default-breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);

$breakpoints: (
  'small': 600px,
  'medium': 900px,
  'large': 1200px
);

@mixin horizontal-layout($components-per-row) {
  display: flex;
  flex-wrap: wrap;
  & > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: unquote((100 / $components-per-row) + '%');
    max-width: unquote((100 / $components-per-row) + '%');
  }
}

.test-layout {
  @include horizontal-layout(1);

  @include cx-breakpoint-up(sm) {
    @include horizontal-layout(2);
  }
  @include cx-breakpoint-up(md) {
    @include horizontal-layout(3);
  }
  @include cx-breakpoint-up(lg) {
    @include horizontal-layout(4);
  }
  @include cx-breakpoint-up(xl) {
    @include horizontal-layout(6);
  }
}
